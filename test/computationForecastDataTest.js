import { assert } from 'chai'
import { describe, it } from 'mocha'
import {
  currentApparentTemperature,
  showAvrOfParameter
} from '../src/scripts/computationForecastData.js'

describe('#currentApparentTemperature', () => {
  const tempArray = [
    12.4, 12.3, 11.9, 11.4, 11, 10.6, 10.6, 10.3, 10.8, 12, 13.2, 14.2, 13.7, 13.5, 13.3, 13.6,
    13.8, 14.6, 15.1, 15, 14.1, 13.3, 12.7, 12, 11.3, 10.9, 10.2, 9.5, 8.9, 8.6, 8.2, 8.3, 10.2,
    11.9, 13.3, 14.1, 14.6, 15.4, 15.7, 15.9, 16, 15.9, 15.9, 15.8, 15.1, 14.2, 13.5, 13.2, 12.5,
    11.6, 10.8, 10.3, 9.7, 9.2, 8.7, 8.8, 10.8, 12.8, 14.8, 16.8, 17.5, 18.4, 19.5, 19.4, 20, 20.2,
    20.5, 20.5, 18.6, 16.8, 15.6, 14.7, 13.8, 13.2, 12.7, 12.4, 12.1, 12, 12.1, 12.5, 13.4, 14.6,
    15.8, 17.1, 18.3, 19.5, 19.5, 18.7, 17.9, 19, 19.4, 18.7, 17.6, 16.4, 15.8, 15.3, 14.9, 14.5,
    14.1, 13.8, 13.3, 12.8, 12.6, 12.8, 13.4, 13.8, 14, 14, 14.2, 14.9, 15.7, 16.2, 16.5, 16.5,
    16.3, 15.9, 15.2, 14.4, 14, 13.5, 12.9, 12.4, 12.1, 11.6, 11.1, 10.8, 10.6, 10.7, 10.8, 11.1,
    11.4, 11.9, 12.2, 13.4, 13.9, 14.2, 13.8, 13, 12.3, 11.5, 10.7, 10, 9.3, 8.6, 8, 7.7, 7.3, 6.9,
    6.4, 5.8, 5.4, 5.4, 5.7, 6, 6.5, 7.1, 7.6, 8.2, 8.9, 9.3, 9.4, 9.4, 9.2, 8.9, 8.6, 8.3, 8, 7.7
  ]
  it('Return current apparent temperature from array by current unix timestamp (22h)', () => {
    assert.equal(currentApparentTemperature(tempArray, 1724688000), 13)
  })
  it('Return current apparent temperature from array by current unix timestamp (16h)', () => {
    assert.equal(currentApparentTemperature(tempArray, 1724666957), 14)
  })
  it('Return current apparent temperature from array by current unix timestamp (00h)', () => {
    assert.equal(currentApparentTemperature(tempArray, 1724609357), 12)
  })
})

describe('#showAvrOfParameter', () => {
  const tempArray = [
    13.8, 13.6, 13.1, 12.7, 12.3, 12, 11.8, 11.6, 12.3, 13.4, 15, 16, 15.4, 15.3, 14.7, 15.1, 15.1,
    15.4, 15.7, 15.3, 14.3, 13.5, 13, 12.3, 11.8, 11.4, 10.8, 10.3, 9.8, 9.5, 9.2, 9.3, 10.9, 12.7,
    14, 14.9, 15.7, 16.5, 16.9, 17.3, 17.3, 17.2, 16.9, 16.4, 15.4, 14.4, 13.7, 13.4, 12.8, 12.1,
    11.5, 11, 10.5, 10, 9.6, 9.7, 11.4, 13.5, 15.3, 17.1, 18.3, 19.4, 20.3, 20.4, 20.7, 20.6, 20.2,
    19.4, 17.8, 16.1, 15.1, 14.4, 13.8, 13.3, 13, 12.8, 12.7, 12.6, 12.9, 13.4, 14.3, 15.7, 16.9,
    18.1, 19.2, 20.3, 20.5, 18.9, 17.7, 18.5, 19, 18.1, 16.8, 15.7, 15.2, 15, 14.7, 14.5, 14.2, 14,
    13.5, 13.1, 12.9, 13.1, 13.7, 14.2, 14.6, 15, 15.4, 16.2, 17, 17.6, 17.8, 17.7, 17.3, 16.5,
    15.5, 14.5, 13.9, 13.5, 13.1, 12.7, 12.4, 12.1, 11.7, 11.4, 11.3, 11.5, 11.9, 12.3, 12.7, 13.3,
    13.6, 15.1, 15.7, 16, 15.8, 15.2, 14.5, 13.9, 13.2, 12.5, 11.8, 11.1, 10.5, 10.1, 9.8, 9.4, 9,
    8.5, 8.2, 8.2, 8.4, 8.8, 9.6, 10.5, 11.3, 12, 12.5, 12.7, 12.7, 12.4, 12, 11.5, 10.9, 10.4, 10,
    9.8
  ]
  const humidityArray = [
    88, 88, 90, 91, 92, 92, 96, 95, 91, 86, 77, 72, 75, 75, 78, 75, 74, 75, 74, 76, 80, 83, 86, 89,
    91, 91, 92, 94, 95, 96, 96, 95, 91, 84, 80, 77, 71, 67, 64, 63, 63, 63, 67, 71, 77, 82, 85, 86,
    88, 91, 92, 94, 94, 95, 95, 95, 91, 84, 78, 73, 66, 60, 55, 55, 55, 58, 63, 73, 80, 87, 90, 91,
    92, 93, 93, 93, 93, 93, 91, 89, 87, 82, 79, 76, 74, 72, 71, 82, 89, 87, 82, 86, 91, 94, 94, 92,
    91, 91, 91, 92, 93, 94, 94, 93, 91, 88, 85, 82, 78, 73, 68, 64, 62, 62, 63, 67, 73, 78, 82, 85,
    88, 90, 92, 93, 94, 96, 96, 95, 93, 91, 88, 84, 82, 73, 69, 67, 67, 69, 71, 72, 72, 73, 74, 76,
    77, 79, 81, 82, 83, 84, 84, 83, 81, 77, 71, 64, 58, 55, 54, 54, 56, 61, 65, 70, 75, 79, 81, 83
  ]

  it('Return averange value from array by day 4 (from 6am to 11pm)', () => {
    assert.equal(showAvrOfParameter(tempArray, 4), 15.4)
  })
  it('Return averange value from array by day 2 (from 6am to 11pm)', () => {
    assert.equal(showAvrOfParameter(humidityArray, 2), 74.3)
  })
})
